model{
  
  for( i in 1:nEvalRows ){
    
    lengthDATA[ evalRows[i] + 1 ] ~ dnorm( length[ evalRows[i] + 1 ] , obsErr ) # length measurement error
    
            length[ evalRows[i] + 1 ] <- length[ evalRows[i] ] + gr[ evalRows[i] ]
    gr[ evalRows[i] ] ~ dnorm( expectedGR[ evalRows[i] ], expectedGRTau[ evalRows[i] ] )
    
    
    expectedGR[ evalRows[i] ] <- grInt + grBeta * length[ evalRows[i] ]
    
    expectedGRTau[ evalRows[i] ] <- 1 / ( expectedGRSigma[ evalRows[i] ] * expectedGRSigma[ evalRows[i] ] )
    expectedGRSigma[evalRows[i]] <- grSigma
    
  }
  
  for( i in 1:nFirstObsRows ){
    length[ firstObsRows[i] ] ~ dnorm( 0,0.0001 )
    lengthDATA[ firstObsRows[i] ] ~ dnorm( length[ firstObsRows[i] ],obsErr ) # length measurement error
  }
  
  
  grInt ~ dnorm(0,0.001)
  grBeta ~ dnorm(0,0.001)
  grSigma ~ dunif(0,10)
  obsErr ~ dunif(5000,10000) # seems like reasonable range. can go bigger, but doesn't seem to change results
#  obsErr ~ dunif(900,1000)

  
  # #individual random effect on grMax
  # beta1Mean ~ dnorm(0,100)
  # for(i in 1:nInd){
  #   grInt[i] ~ dnorm( beta1Mean,tauInd )
  # }
  # tauInd <- 1/pow(sigmaInd,2)
  # sigmaInd ~ dunif(0,1)
  # 
  # 
  
  
  
  
  

  # for( i in 1:(nEvalRows) ){
  #   stdLength[evalRows[i]] <-  ( length[evalRows[i]] - lengthMean ) / lengthSD
  # }
  # 
  # for( i in 1:( nLastObsRows ) ){
  #   stdLength[ lastObsRows[ i ] ] <-  ( length[ lastObsRows[i] ] - lengthMean ) / lengthSD
  # }
  
}
